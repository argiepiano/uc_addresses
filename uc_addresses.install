<?php

/**
 * @file
 * Install file for Ubercart Addresses.
 */

/**
 * Implements hook_schema().
 */
function uc_addresses_schema() {
  $schema['uc_addresses'] = array(
    'description' => 'Ubercart customer addresses',
    'fields' => array(
      'aid' => array(
        'description' => 'The address ID',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'uid' => array(
        'description' => 'The ID of the user who owns this address',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'first_name' => array(
        'description' => 'The addressee\'s first name',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'last_name' => array(
        'description' => 'The addressee\'s last name',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'phone' => array(
        'description' => 'The addressee\'s phone number',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'company' => array(
        'description' => 'The addressee\'s company name',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'street1' => array(
        'description' => 'The addressee\'s residence number and street',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'street2' => array(
        'description' => 'The addressee\'s residence number and street (continued)',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'city' => array(
        'description' => 'The addressee\'s city of residence',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'zone' => array(
        'description' => 'The addressee\'s zone of residence',
        'type' => 'int',
        'size' => 'medium',
        'not null' => TRUE,
        'default' => 0,
      ),
      'postal_code' => array(
        'description' => 'The addressee\'s postal code',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'country' => array(
        'description' => 'The addressee\'s country of residence',
        'type' => 'int',
        'size' => 'medium',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'address_name' => array(
        'description' => 'The name used to access this address',
        'type' => 'varchar',
        'length' => 20,
        'not null' => FALSE,
      ),
      'default_shipping' => array(
        'description' => 'If the address is the default shipping address',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
      ),
      'default_billing' => array(
        'description' => 'If the address is the default billing address',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
      ),
      'created' => array(
        'description' => 'The date this address was created',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'modified' => array(
        'description' => 'The date this address was last modified',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'indexes' => array(
      'aid_uid_idx' => array('aid', 'uid'),
    ),
    'primary key' => array('aid'),
  );
  return $schema;
}

/**
 * Implements hook_install().
 */
function uc_addresses_install() {
  $t = get_t();
  // Setup default permissions. Authenticated users will automatically
  // be granted with permissions to manage their own addresses.
  user_role_grant_permissions(BACKDROP_AUTHENTICATED_ROLE, array(
    'view own addresses',
    'add/edit own addresses',
    'delete own addresses',
  )
  );

  // Increase the weight of uc_addresses relative
  // to uc_quote by an addition of 1 so that
  // uc_addresses module can undo some of the actions
  // done by uc_quote's form alter, which causes the
  // delivery address form to disapear on checkout.
  //
  // See also http://drupal.org/node/1421720.
  $weight = db_select('system', 's')
    ->fields('s', array('weight'))
    ->condition('name', 'uc_quote', '=')
    ->execute()
    ->fetchField();
  db_update('system')
    ->fields(array('weight' => $weight + 1))
    ->condition('name', 'uc_addresses', '=')
    ->execute();

  backdrop_set_message($t("Ubercart Addresses is installed. The authenticated user automatically was granted the permissions %view_own, %edit_own and %delete_own.", array('%view_own' => $t('view own addresses'), '%edit_own' => $t('add/edit own addresses'), '%delete_own' => $t('delete own addresses'))), 'status');
}

/**
 * Implements hook_uninstall().
 *
 */
function uc_addresses_uninstall() {
}

/**
 * Implements hook_update_last_removed().
 */
function uc_addresses_update_last_removed() {
  return 7101;
}

/**
 * Migrate uc_addresses variables to config.
 */
function uc_addresses_update_1000() {
  $config = config('uc_addresses.settings');
  $config->set('uc_addresses_use_address_name', update_variable_get('uc_addresses_use_address_name', TRUE));
  $config->set('uc_addresses_default_billing_address', update_variable_get('uc_addresses_default_billing_address', TRUE));
  $config->set('uc_addresses_default_shipping_address', update_variable_get('uc_addresses_default_shipping_address', TRUE));
  $config->set('uc_addresses_require_address', update_variable_get('uc_addresses_require_address', TRUE));
  $config->set('uc_addresses_require_address_admin', update_variable_get('uc_addresses_require_address_admin', TRUE));
  $config->set('uc_addresses_add_button', update_variable_get('uc_addresses_add_button', 'Save address'));
  $config->set('uc_addresses_update_button', update_variable_get('uc_addresses_update_button', 'Save address'));
  $config->set('uc_addresses_delete_button', update_variable_get('uc_addresses_delete_button', 'Delete address'));
  $config->set('uc_addresses_delete_instructions', update_variable_get('uc_addresses_delete_instructions', 'Are you sure you want to delete this address? Once deleted, the address cannot be recovered.'));

  update_variable_del('uc_addresses_use_address_name');
  update_variable_del('uc_addresses_default_billing_address');
  update_variable_del('uc_addresses_default_shipping_address');
  update_variable_del('uc_addresses_require_address');
  update_variable_del('uc_addresses_require_address_admin');
  update_variable_del('uc_addresses_default_address_shipping_address');
  update_variable_del('uc_addresses_default_address_billing_address');
  update_variable_del('uc_addresses_add_button');
  update_variable_del('uc_addresses_update_button');
  update_variable_del('uc_addresses_delete_button');
  update_variable_del('uc_addresses_delete_instructions');

  $result = db_select('uc_countries')
    ->condition('version', 0, '>')
    ->fields('uc_countries', array('country_id'))
    ->execute();
  foreach ($result as $country) {
    $config->set('uc_addresses_address_format_' . $country->country_id, update_variable_get('uc_addresses_address_format_' . $country->country_id, NULL));
    update_variable_del('uc_addresses_address_format_' . $country->country_id);
  }

  foreach (uc_addresses_address_types() as $address_type) {
    $config->set('uc_addresses_use_default_' . $address_type, update_variable_get('uc_addresses_use_default_' . $address_type, TRUE));
    update_variable_del('uc_addresses_use_default_' . $address_type);
  } 
  $config->save();
}
