<?php
/**
 * @file
 * Test cases for checkout.
 */

// Ensure UcAddressesTestCase is available.
require_once 'UcAddressesTestCase.class.php';
// Ensure UbercartCartCheckoutTestCase is available.
module_load_include('test', 'uc_cart', 'uc_cart');

/**
 * Test cases for checkout.
 */
class UcAddressesCartCheckoutTestCase extends UbercartCartCheckoutTestCase {
  /**
   * Describes this test.
   *
   * @return array
   */
  public static function getInfo() {
    return array(
      'name' => 'Cart and checkout',
      'description' => 'Ensures the cart and checkout process is functioning when Ubercart Addresses is enabled.',
      'group' => 'Ubercart Addresses',
      'dependencies' => array('ctools', 'token', 'uc_store', 'uc_cart'),
    );
  }

  /**
   * Setup modules
   */
  public function setUp() {
    parent::setUp();

    // Install Ubercart Addresses and flush schema cache.
    drupal_install_modules(array('ctools', 'uc_addresses'));
    drupal_get_schema(NULL, TRUE);
  }

  /**
   * Override of UbercartTestHelper::checkout().
   */
  function checkout($edit = array()) {
    $this->drupalPost('cart', array(), 'Checkout');

    // Build the panes.
    $zone_id = db_result(db_query('SELECT zone_id FROM {uc_zones} WHERE zone_country_id = %d ORDER BY rand()', variable_get('uc_store_country', 840)));
    $edit += array(
      'panes[delivery][delivery][delivery_first_name]' => $this->randomName(10),
      'panes[delivery][delivery][delivery_last_name]' => $this->randomName(10),
      'panes[delivery][delivery][delivery_street1]' => $this->randomName(10),
      'panes[delivery][delivery][delivery_city]' => $this->randomName(10),
      'panes[delivery][delivery][delivery_zone]' => $zone_id,
      'panes[delivery][delivery][delivery_postal_code]' => mt_rand(10000, 99999),
      'panes[billing][billing][billing_first_name]' => $this->randomName(10),
      'panes[billing][billing][billing_last_name]' => $this->randomName(10),
      'panes[billing][billing][billing_street1]' => $this->randomName(10),
      'panes[billing][billing][billing_city]' => $this->randomName(10),
      'panes[billing][billing][billing_zone]' => $zone_id,
      'panes[billing][billing][billing_postal_code]' => mt_rand(10000, 99999),
    );

    // If the email address has not been set, and the user has not logged in,
    // add a primary email address.
    if (!isset($edit['panes[customer][primary_email]']) && !$this->loggedInUser) {
      $edit['panes[customer][primary_email]'] = $this->randomName(8) . '@example.com';
    }

    // Submit the checkout page.
    $this->drupalPost('cart/checkout', $edit, t('Review order'));
    $this->assertRaw(t('Your order is almost complete.'));

    // Complete the review page.
    $this->drupalPost(NULL, array(), t('Submit order'));

    if ($order_id = db_result(db_query("SELECT order_id FROM {uc_orders} WHERE delivery_first_name = '%s'", $edit['panes[delivery][delivery][delivery_first_name]']))) {
      $this->pass(t('Order %order_id has been created', array('%order_id' => $order_id)));
    }
    else {
      $this->fail(t('An order was created.'));
    }

    return $order_id;
  }
}
